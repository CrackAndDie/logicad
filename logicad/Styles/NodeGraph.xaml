<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrl="clr-namespace:NodeGraph.Controls;assembly=NodeGraph">
    <ContextMenu x:Key="NodeGraphContextMenu">
        <MenuItem Header="AddNode"
                  Command="{Binding NodeGraphViewModel.AddNodeCommand}" />
        <MenuItem Header="AddGroupNode"
                  Command="{Binding NodeGraphViewModel.AddGroupNodeCommand}" />
        <MenuItem Header="RemoveNodes"
                  Command="{Binding NodeGraphViewModel.RemoveNodesCommand}" />
    </ContextMenu>

    <Style x:Key="NodeInputStyle"
           TargetType="{x:Type ctrl:NodeInputContent}"
           BasedOn="{StaticResource {x:Type ctrl:NodeInputContent}}">
        <Setter Property="Guid"
                Value="{Binding Guid, Mode=OneWay}" />
        <Setter Property="Content"
                Value="{Binding Label}" />
        <Setter Property="IsEnabled"
                Value="{Binding IsEnable}" />
        <Setter Property="AllowToConnectMultiple"
                Value="{Binding AllowToConnectMultiple}" />
    </Style>

    <Style x:Key="NodeOutputStyle"
           TargetType="{x:Type ctrl:NodeOutputContent}"
           BasedOn="{StaticResource {x:Type ctrl:NodeOutputContent}}">
        <Setter Property="Guid"
                Value="{Binding Guid, Mode=OneWay}" />
        <Setter Property="Content"
                Value="{Binding Label}" />
        <Setter Property="IsEnabled"
                Value="{Binding IsEnable}" />
    </Style>

    <Style x:Key="NodeLinkStyle"
           TargetType="{x:Type ctrl:NodeLink}"
           BasedOn="{StaticResource {x:Type ctrl:NodeLink}}">
        <Setter Property="Guid"
                Value="{Binding Guid, Mode=OneWay}" />
        <Setter Property="OutputConnectorGuid"
                Value="{Binding OutputConnectorGuid, Mode=OneWay}" />
        <Setter Property="InputConnectorGuid"
                Value="{Binding InputConnectorGuid, Mode=OneWay}" />
        <Setter Property="IsLocked"
                Value="{Binding IsLocked, Mode=OneWay}" />
        <Setter Property="IsSelected"
                Value="{Binding IsSelected}" />
        <!--dont need to specify Mode=TwoWay because link is set default two way property.-->
    </Style>

    <Style x:Key="DefaultNodeStyle"
           TargetType="{x:Type ctrl:DefaultNode}"
           BasedOn="{StaticResource {x:Type ctrl:DefaultNode}}">
        <Setter Property="Guid"
                Value="{Binding Guid, Mode=OneWay}" />
        <!--disconnect position binding if you specify Mode=OneWay, because it will change binding position instance in view control.-->
        <Setter Property="Position"
                Value="{Binding Position}" />
        <Setter Property="IsSelected"
                Value="{Binding IsSelected}" />
        <Setter Property="Inputs"
                Value="{Binding Inputs}" />
        <Setter Property="InputLayout"
                Value="Center" />
        <Setter Property="Outputs"
                Value="{Binding Outputs}" />
        <Setter Property="OutputLayout"
                Value="Center" />
        <Setter Property="InputMargin"
                Value="5,1,5,1" />
        <Setter Property="OutputMargin"
                Value="4,0,4,10" />
        <Setter Property="InputStyle"
                Value="{StaticResource NodeInputStyle}" />
        <Setter Property="OutputStyle"
                Value="{StaticResource NodeOutputStyle}" />
        <Setter Property="SizeChangedCommand"
                Value="{Binding SizeChangedCommand}" />
        <Setter Property="HeaderContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Background="#FF666666">
                        <StackPanel HorizontalAlignment="Center">
                            <Label Content="{Binding Name}" />
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel>
                        <TextBox Text="{Binding Body}" />
                        <DockPanel TextBlock.Foreground="WhiteSmoke">
                            <TextBlock Margin="0,0,0,4"
                                       Text="{Binding Width, StringFormat=Width:{0:F2}}" />
                            <TextBlock Margin="4,0,0,0"
                                       Text="{Binding Height, StringFormat=Height:{0:F2}}" />
                        </DockPanel>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupNodeStyle"
           TargetType="{x:Type ctrl:GroupNode}"
           BasedOn="{StaticResource {x:Type ctrl:GroupNode}}">
        <Setter Property="Guid"
                Value="{Binding Guid, Mode=OneWay}" />
        <!--disconnect position binding if you specify Mode=OneWay, because it will change binding position instance in view control.-->
        <Setter Property="Position"
                Value="{Binding Position}" />
        <Setter Property="InnerPosition"
                Value="{Binding InnerPosition}" />
        <Setter Property="InterlockPosition"
                Value="{Binding InterlockPosition}" />
        <Setter Property="InnerWidth"
                Value="{Binding InnerWidth}" />
        <Setter Property="InnerHeight"
                Value="{Binding InnerHeight}" />
        <Setter Property="Comment"
                Value="{Binding Comment}" />
        <Setter Property="CommentSize"
                Value="24" />
        <Setter Property="IsSelected"
                Value="{Binding IsSelected}" />
        <Setter Property="SizeChangedCommand"
                Value="{Binding SizeChangedCommand}" />
        <Setter Property="HeaderContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Background="#FF666666">
                        <StackPanel HorizontalAlignment="Center">
                            <Label Content="{Binding Name}" />
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>